name: Build and Transfer Docker Image

on:
  push:
    branches:
      - production-pr

jobs:
  build-and-transfer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          REPO_NAME=$(echo "${GITHUB_REPOSITORY##*/}" | tr '[:upper:]' '[:lower:]')
          docker build -t ${REPO_NAME}:latest .

      - name: Save Docker Image as Tar
        run: |
          REPO_NAME=$(echo "${GITHUB_REPOSITORY##*/}" | tr '[:upper:]' '[:lower:]')
          docker save -o ${REPO_NAME}.tar ${REPO_NAME}:latest
          
      - name: Update File Permissions
        run: chmod 644 learning-mode-ai-info-service.tar
      
      - name: Ensure Target Directory Exists
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: bash --noprofile --norc -c "mkdir -p /home/${{ secrets.EC2_USER }}/images/"
      
      - name: Transfer Docker Image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "learning-mode-ai-info-service.tar"
          target: "/home/${{ secrets.EC2_USER }}/images/"

      - name: Load Docker Image on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            REPO_NAME="learning-mode-ai-info-service" # Hardcoded for now
            echo "Loading Docker image: /home/${{ secrets.EC2_USER }}/images/${REPO_NAME}.tar"
            docker load < /home/${{ secrets.EC2_USER }}/images/${REPO_NAME}.tar

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DEPLOYMENT_PAT }}
          repository: learning-mode-ai/learning-mode-ai-deployment
          event-type: deploy
